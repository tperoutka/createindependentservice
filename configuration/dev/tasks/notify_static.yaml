---
subscription_points: 
  - sc-createindependentserviceprocess-common-stable_notify_service_account_created
  - sc-createindependentserviceprocess-common-stable_notify_service_instances_bundle_created
  - sc-createindependentserviceprocess-common-stable_notify_service_created_in_landscape_callback
  - sc-createindependentserviceprocess-common-stable_notify_service_created_in_landscape_command
command:
  request: notify_slack
  reply_to:
    type: http
    identification: caller_connection
  variables:
    - name: channel
      source: header
      value: 'TBD'
      type: string
      example: 'tearoom_notifications'
    - name: title
      source: header
      value: 'TBD'
      type: string
      example: 'Message Title'
    - name: text
      source: header
      value: 'Service ID: god-service'
      type: string
      example: 'This is the text of the message'
    - name: sender
      source: header
      value: 'sc-createindependentservice workflow'
      type: string
      example: 'SenderId'
  handler:
    type: rest
    reactor:
      domain: hr
      context: personaggregate
      purpose: common
      version: stable
      environment:
        space: ict
        tier: dev2
    implementation_note: 'Sends a notification to Slack'
  security:
    handler:
      tgt_audience_root: null
    command:
      tgt_audience_root: null
response:
mock:
  default_response_type: 'ok'
  sleep_before_execution_seconds: 1
